# Use a secure TLS configuration by mounting the Elasticsearch CA certificate
extraVolumes:
  - name: es-ca
    secret:
      secretName: elasticsearch-master-crt

extraVolumeMounts:
  - name: es-ca
    mountPath: /fluent-bit/certs/ca.crt
    subPath: ca.crt
    readOnly: true

# Mount the elastic password from its secret
extraEnvVarsSecret: "elasticsearch-secret"

# Correctly configure security contexts for a DaemonSet
daemonset:
  enabled: true
  podSecurityContext:
    enabled: true

containerSecurityContext:
  enabled: true
  privileged: true
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: true

# Your configuration with corrected formatting and secure TLS
config:
  customParsers: |
    [PARSER]
        Name     flask_json
        Format   json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L

  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        Tag kube.*
        Parser docker
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
    [FILTER]
        Name parser
        Match kube.*
        Key_Name log
        Parser flask_json
        Reserve_Data On

  outputs: |
    [OUTPUT]
        Name             es
        Match            *
        Host             elasticsearch.logging.svc.cluster.local
        Port             9200
        HTTP_User        elastic
        HTTP_Passwd      password123
        Logstash_Format  On
        Logstash_Prefix  kube
        Suppress_Type_Name On
        # Secure TLS Configuration
        tls              On
        tls.verify       On
        tls.ca_file      /fluent-bit/certs/ca.crt

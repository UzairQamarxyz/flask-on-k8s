name: Flask App CI/CD

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  sast:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit (SAST)
        run: bandit -r app -ll

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run Dependency Audit
        run: pip-audit -r app/requirements.txt

  tests:
    runs-on: ubuntu-latest
    needs: [sast, dependency-scan] # only run after scans succeed
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -r app/requirements.txt
      - name: Run pytest
        run: pytest -v app/

  lint-dockerfile:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  build-docker:
    runs-on: ubuntu-latest
    needs: lint-dockerfile
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t flask:${{ github.sha }} ./app/

  scan-docker:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@v4
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref: flask:${{ github.sha }}

  push-docker:
    runs-on: ubuntu-latest
    needs: scan-docker
    steps:
      - uses: actions/checkout@v4
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker image
        run: |
          docker tag flask:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/flask:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask:${{ github.sha }}

name: Flask App CI/CD

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  sast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit (SAST)
        run: bandit -r app

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run Dependency Audit
        run: pip-audit -r app/requirements.txt

  tests:
    runs-on: ubuntu-latest
    needs: [sast, dependency-scan] # only run after scans succeed
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Run pytest
        run: pytest -v app/

  build-scan-push:
    runs-on: ubuntu-latest
    needs: tests # only run if tests pass
    steps:
      - uses: actions/checkout@v4

      # Dockerfile lint
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      # Build Docker image
      - name: Build Docker image
        run: docker build -t flask:${{ github.sha }} ./app/

      # Image scan
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref: flask:${{ github.sha }}

      # Push to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker tag flask:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/flask:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask:${{ github.sha }}

#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Setup kubectl
#         uses: azure/setup-kubectl@v4
#         with:
#           version: v1.29.0

#       - name: Setup Helm
#         uses: azure/setup-helm@v4
#         with:
#           version: v3.14.0

#       - name: Configure Kube Context
#         run: |
#           echo "${{ secrets.KUBECONFIG_FILE }}" > kubeconfig.yaml
#           export KUBECONFIG=kubeconfig.yaml

#       - name: Helm Upgrade
#         run: |
#           helm upgrade --install myapp ./helm \
#             --set image.repository=mydockerhubuser/myapp \
#             --set image.tag=${{ github.sha }}
